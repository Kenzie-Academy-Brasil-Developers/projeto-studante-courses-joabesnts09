[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Full",
        "importPath": "queue",
        "description": "queue",
        "isExtraImport": true,
        "detail": "queue",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "AccountView",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "rest_framework_simplejwt",
        "description": "rest_framework_simplejwt",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "AccountSerializer",
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "isExtraImport": true,
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "contents.models",
        "description": "contents.models",
        "isExtraImport": true,
        "detail": "contents.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "contents.models",
        "description": "contents.models",
        "isExtraImport": true,
        "detail": "contents.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "contents.models",
        "description": "contents.models",
        "isExtraImport": true,
        "detail": "contents.models",
        "documentation": {}
    },
    {
        "label": "ContentSerializer",
        "importPath": "contents.serializers",
        "description": "contents.serializers",
        "isExtraImport": true,
        "detail": "contents.serializers",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "contents.serializers",
        "description": "contents.serializers",
        "isExtraImport": true,
        "detail": "contents.serializers",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "ContentPermission",
        "importPath": "contents.permissions",
        "description": "contents.permissions",
        "isExtraImport": true,
        "detail": "contents.permissions",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.models",
        "description": "courses.models",
        "isExtraImport": true,
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.models",
        "description": "courses.models",
        "isExtraImport": true,
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.models",
        "description": "courses.models",
        "isExtraImport": true,
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.models",
        "description": "courses.models",
        "isExtraImport": true,
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.models",
        "description": "courses.models",
        "isExtraImport": true,
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "importPath": "students_courses.serializers",
        "description": "students_courses.serializers",
        "isExtraImport": true,
        "detail": "students_courses.serializers",
        "documentation": {}
    },
    {
        "label": "StudentCourseSerializer",
        "importPath": "students_courses.serializers",
        "description": "students_courses.serializers",
        "isExtraImport": true,
        "detail": "students_courses.serializers",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "courses.serializers",
        "description": "courses.serializers",
        "isExtraImport": true,
        "detail": "courses.serializers",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "importPath": "courses.serializers",
        "description": "courses.serializers",
        "isExtraImport": true,
        "detail": "courses.serializers",
        "documentation": {}
    },
    {
        "label": "CoursePermission",
        "importPath": "courses.permissions",
        "description": "courses.permissions",
        "isExtraImport": true,
        "detail": "courses.permissions",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "unittest",
        "description": "unittest",
        "isExtraImport": true,
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "unittest",
        "description": "unittest",
        "isExtraImport": true,
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "unittest",
        "description": "unittest",
        "isExtraImport": true,
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyRel",
        "importPath": "django.db.models.fields.reverse_related",
        "description": "django.db.models.fields.reverse_related",
        "isExtraImport": true,
        "detail": "django.db.models.fields.reverse_related",
        "documentation": {}
    },
    {
        "label": "StudentCourse",
        "importPath": "students_courses.models",
        "description": "students_courses.models",
        "isExtraImport": true,
        "detail": "students_courses.models",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_random_secret_key",
        "importPath": "django.core.management.utils",
        "description": "django.core.management.utils",
        "isExtraImport": true,
        "detail": "django.core.management.utils",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dotenv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dotenv",
        "description": "dotenv",
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0001_initial",
        "description": "accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Account',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0002_alter_account_id",
        "description": "accounts.migrations.0002_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('25a06e5c-8f93-4ff4-985b-ca4631493e39'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0002_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0003_alter_account_id",
        "description": "accounts.migrations.0003_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0002_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('51cb8964-3b52-4c22-8d91-4b8a06f2ac84'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0003_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0004_alter_account_id",
        "description": "accounts.migrations.0004_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0003_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('1b548ed0-3663-4f4f-85c6-0f3fafd9d9fb'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0004_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0005_alter_account_id",
        "description": "accounts.migrations.0005_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0004_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('b35e1a71-c4f6-4052-8af9-a17a9f9ab677'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0005_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0006_alter_account_email_alter_account_id",
        "description": "accounts.migrations.0006_alter_account_email_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0005_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='email',\n            field=models.EmailField(max_length=100, unique=True),\n        ),",
        "detail": "accounts.migrations.0006_alter_account_email_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0007_alter_account_id",
        "description": "accounts.migrations.0007_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0006_alter_account_email_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('4b2a366a-dcca-4716-b45a-1b9568fe962e'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0007_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0008_alter_account_id",
        "description": "accounts.migrations.0008_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0007_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('2ad1d4ee-6da8-4ffc-bb70-b24748e55b7f'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "accounts.migrations.0008_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0009_alter_account_id_alter_account_is_superuser",
        "description": "accounts.migrations.0009_alter_account_id_alter_account_is_superuser",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0008_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('6f6ca1d8-f0e1-43cb-a36b-8f5a85ac1109'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "accounts.migrations.0009_alter_account_id_alter_account_is_superuser",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0010_alter_account_id",
        "description": "accounts.migrations.0010_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0009_alter_account_id_alter_account_is_superuser'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('c5b7583b-6edf-45c0-8718-dabba2bb9b16'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "accounts.migrations.0010_alter_account_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0011_alter_account_id",
        "description": "accounts.migrations.0011_alter_account_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0010_alter_account_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='account',\n            name='id',\n            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "accounts.migrations.0011_alter_account_id",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class Account(AbstractUser):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    email = models.EmailField(max_length=100, unique=True)\n    is_superuser = models.BooleanField(default=False)",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "AccountSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class AccountSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Account\n        fields = ['id', 'username', 'password', 'email', 'is_superuser']\n        extra_kwargs = {\n            'password': {'write_only': True}\n        }\n    def create(self, validated_data: Account):\n        if validated_data['is_superuser']:\n            return Account.objects.create_superuser(**validated_data)",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path('accounts/', AccountView.as_view()),\n    path('login/', views.TokenObtainPairView.as_view()),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "AccountView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class AccountView(generics.CreateAPIView):\n    queryset = Account.objects.all()\n    serializer_class = AccountSerializer",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0001_initial",
        "description": "contents.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Content',\n            fields=[\n                ('id', models.UUIDField(default=uuid.UUID('8e71e44b-8fb8-4700-8b07-438b921a0d19'), editable=False, primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=150)),",
        "detail": "contents.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0002_initial",
        "description": "contents.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contents', '0001_initial'),\n        ('courses', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='content',\n            name='course',",
        "detail": "contents.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0003_alter_content_id",
        "description": "contents.migrations.0003_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0002_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('226dbff8-f29b-43fe-8742-cb7539298805'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0003_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0004_alter_content_id",
        "description": "contents.migrations.0004_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0003_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('5e1ed4d1-7ceb-45d9-9262-03ae349107c0'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0004_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0005_alter_content_id_alter_content_video_url",
        "description": "contents.migrations.0005_alter_content_id_alter_content_video_url",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0004_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('b7a276e8-f290-4f2a-a01c-5bf3e3fa1592'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0005_alter_content_id_alter_content_video_url",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0006_alter_content_id",
        "description": "contents.migrations.0006_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0005_alter_content_id_alter_content_video_url'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('404a6306-1621-4e55-b159-6fa90b46d0e8'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0006_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0007_alter_content_id",
        "description": "contents.migrations.0007_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0006_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('0515b2af-c00a-42a3-82f6-c6297abfc06c'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0007_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0008_alter_content_id",
        "description": "contents.migrations.0008_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0007_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('f6423581-3beb-43cc-a4f7-2d78f156066e'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "contents.migrations.0008_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0009_alter_content_id",
        "description": "contents.migrations.0009_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0008_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('d401418a-5e4a-4aca-9ac7-375615ba4d18'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "contents.migrations.0009_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0010_alter_content_id",
        "description": "contents.migrations.0010_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0009_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('cdb63cb9-40d4-40dc-85f6-3041e62cdd2a'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "contents.migrations.0010_alter_content_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contents.migrations.0011_alter_content_id",
        "description": "contents.migrations.0011_alter_content_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contents', '0010_alter_content_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='content',\n            name='id',\n            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "contents.migrations.0011_alter_content_id",
        "documentation": {}
    },
    {
        "label": "ContentsConfig",
        "kind": 6,
        "importPath": "contents.apps",
        "description": "contents.apps",
        "peekOfCode": "class ContentsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contents'",
        "detail": "contents.apps",
        "documentation": {}
    },
    {
        "label": "Content",
        "kind": 6,
        "importPath": "contents.models",
        "description": "contents.models",
        "peekOfCode": "class Content(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    name = models.CharField(max_length=150)\n    content = models.TextField()\n    video_url = models.CharField(max_length=200, null=True, blank=True)\n    course = models.ForeignKey(\n        \"courses.Course\", on_delete=models.CASCADE, related_name=\"contents\"\n    )",
        "detail": "contents.models",
        "documentation": {}
    },
    {
        "label": "ContentPermission",
        "kind": 6,
        "importPath": "contents.permissions",
        "description": "contents.permissions",
        "peekOfCode": "class ContentPermission(permissions.BasePermission):\n    def has_permission(self, request: Request, view: View):\n        return request.user.is_superuser or request.method in permissions.SAFE_METHODS",
        "detail": "contents.permissions",
        "documentation": {}
    },
    {
        "label": "ContentSerializer",
        "kind": 6,
        "importPath": "contents.serializers",
        "description": "contents.serializers",
        "peekOfCode": "class ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Content\n        fields = ['id', 'name', 'content', 'video_url']",
        "detail": "contents.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "contents.urls",
        "description": "contents.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"courses/<uuid:course_id>/contents/\", CreateContentView.as_view()),\n    path(\n        \"courses/<uuid:course_id>/contents/<uuid:content_id>/\",\n        GetUpdateDeleteContentView.as_view(),\n    ),\n]",
        "detail": "contents.urls",
        "documentation": {}
    },
    {
        "label": "CreateContentView",
        "kind": 6,
        "importPath": "contents.views",
        "description": "contents.views",
        "peekOfCode": "class CreateContentView(generics.CreateAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, ContentPermission]\n    serializer_class = ContentSerializer\n    def perform_create(self, serializer):\n        found_course = get_object_or_404(Course, pk=self.kwargs.get(\"course_id\"))\n        return serializer.save(course=found_course)\nclass GetUpdateDeleteContentView(generics.RetrieveUpdateDestroyAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, ContentPermission]",
        "detail": "contents.views",
        "documentation": {}
    },
    {
        "label": "GetUpdateDeleteContentView",
        "kind": 6,
        "importPath": "contents.views",
        "description": "contents.views",
        "peekOfCode": "class GetUpdateDeleteContentView(generics.RetrieveUpdateDestroyAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, ContentPermission]\n    serializer_class = ContentSerializer\n    queryset = Content.objects.all()\n    lookup_url_kwarg = \"content_id\"\n    def get_queryset(self):\n        course_id = self.kwargs.get(\"course_id\")\n        content_id = self.kwargs.get(\"content_id\")\n        if not Course.objects.filter(id=course_id).exists():",
        "detail": "contents.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0001_initial",
        "description": "courses.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.UUIDField(default=uuid.UUID('096b7fff-7010-4d09-8ddb-fe57cd29b8c7'), editable=False, primary_key=True, serialize=False)),",
        "detail": "courses.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0002_initial",
        "description": "courses.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('courses', '0001_initial'),\n        ('students_courses', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='course',",
        "detail": "courses.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0003_alter_course_id_alter_course_instructor",
        "description": "courses.migrations.0003_alter_course_id_alter_course_instructor",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0002_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('49dd97ce-d9ed-4fe2-8816-68881bd0f4d5'), editable=False, primary_key=True, serialize=False),",
        "detail": "courses.migrations.0003_alter_course_id_alter_course_instructor",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0004_alter_course_end_date_alter_course_id_and_more",
        "description": "courses.migrations.0004_alter_course_end_date_alter_course_id_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0003_alter_course_id_alter_course_instructor'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='end_date',\n            field=models.DateTimeField(),\n        ),",
        "detail": "courses.migrations.0004_alter_course_end_date_alter_course_id_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0005_alter_course_id",
        "description": "courses.migrations.0005_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0004_alter_course_end_date_alter_course_id_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('99952a38-c119-4119-bea2-0674efd649a0'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "courses.migrations.0005_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0006_alter_course_id",
        "description": "courses.migrations.0006_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0005_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('e17b44e3-a939-4f36-b6f7-bef425fedfc4'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "courses.migrations.0006_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0007_alter_course_id_alter_course_status",
        "description": "courses.migrations.0007_alter_course_id_alter_course_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0006_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('e05edc21-c0e5-47a6-841f-78ab212deda2'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "courses.migrations.0007_alter_course_id_alter_course_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0008_alter_course_id",
        "description": "courses.migrations.0008_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0007_alter_course_id_alter_course_status'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('3c14bd85-d168-44ec-9e03-6c38a10007f9'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "courses.migrations.0008_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0009_alter_course_id",
        "description": "courses.migrations.0009_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0008_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('74bcb00d-e5bc-4fa2-9639-419659d0f9f3'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "courses.migrations.0009_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0010_alter_course_id",
        "description": "courses.migrations.0010_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0009_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('be5a20fa-c7d5-47d0-8504-a06fae7ac294'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "courses.migrations.0010_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0011_alter_course_id",
        "description": "courses.migrations.0011_alter_course_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0010_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='id',\n            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "courses.migrations.0011_alter_course_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "courses.migrations.0012_alter_course_end_date_alter_course_start_date",
        "description": "courses.migrations.0012_alter_course_end_date_alter_course_start_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('courses', '0011_alter_course_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='course',\n            name='end_date',\n            field=models.DateField(),\n        ),",
        "detail": "courses.migrations.0012_alter_course_end_date_alter_course_start_date",
        "documentation": {}
    },
    {
        "label": "CoursesConfig",
        "kind": 6,
        "importPath": "courses.apps",
        "description": "courses.apps",
        "peekOfCode": "class CoursesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'courses'",
        "detail": "courses.apps",
        "documentation": {}
    },
    {
        "label": "StatusChoice",
        "kind": 6,
        "importPath": "courses.models",
        "description": "courses.models",
        "peekOfCode": "class StatusChoice(models.TextChoices):\n    NOT_STARTED = \"not started\"\n    IN_PROGRESS = \"in progress\"\n    FINISHED = \"finished\"\nclass Course(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    name = models.CharField(max_length=100, unique=True)\n    status = models.CharField(\n        max_length=11, choices=StatusChoice.choices, default=StatusChoice.NOT_STARTED\n    )",
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "courses.models",
        "description": "courses.models",
        "peekOfCode": "class Course(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    name = models.CharField(max_length=100, unique=True)\n    status = models.CharField(\n        max_length=11, choices=StatusChoice.choices, default=StatusChoice.NOT_STARTED\n    )\n    start_date = models.DateField()\n    end_date = models.DateField()\n    instructor = models.ForeignKey(\n        \"accounts.Account\",",
        "detail": "courses.models",
        "documentation": {}
    },
    {
        "label": "CoursePermission",
        "kind": 6,
        "importPath": "courses.permissions",
        "description": "courses.permissions",
        "peekOfCode": "class CoursePermission(permissions.BasePermission):\n    def has_permission(self, request: Request, view: View):\n            return request.user.is_superuser or request.method in permissions.SAFE_METHODS",
        "detail": "courses.permissions",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "courses.serializers",
        "description": "courses.serializers",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    students_courses = StudentSerializer(many=True, read_only=True)\n    class Meta:\n        model = Course\n        fields = [\n            \"id\",\n            \"name\",\n            \"status\",\n            \"start_date\",\n            \"end_date\",",
        "detail": "courses.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "courses.urls",
        "description": "courses.urls",
        "peekOfCode": "urlpatterns = [\n    path('courses/', CreateListCourseView.as_view()),\n    path('courses/<uuid:course_id>/', GetUpdateDeleteCourseView.as_view()),\n    path('courses/<uuid:course_id>/students/', GetUpdateStudentView.as_view()),\n]",
        "detail": "courses.urls",
        "documentation": {}
    },
    {
        "label": "CreateListCourseView",
        "kind": 6,
        "importPath": "courses.views",
        "description": "courses.views",
        "peekOfCode": "class CreateListCourseView(generics.ListCreateAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, CoursePermission]\n    queryset = Course.objects.all()\n    serializer_class = CourseSerializer\n    def get_queryset(self):\n        if self.request.user.is_superuser:\n            return self.queryset.all()\n        return self.queryset.filter(students=self.request.user)\nclass GetUpdateDeleteCourseView(generics.RetrieveUpdateDestroyAPIView):",
        "detail": "courses.views",
        "documentation": {}
    },
    {
        "label": "GetUpdateDeleteCourseView",
        "kind": 6,
        "importPath": "courses.views",
        "description": "courses.views",
        "peekOfCode": "class GetUpdateDeleteCourseView(generics.RetrieveUpdateDestroyAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, CoursePermission]\n    queryset = Course.objects.all()\n    serializer_class = CourseSerializer\n    lookup_url_kwarg = 'course_id'\nclass GetUpdateStudentView(generics.RetrieveUpdateAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, CoursePermission]\n    serializer_class = StudentCourseSerializer",
        "detail": "courses.views",
        "documentation": {}
    },
    {
        "label": "GetUpdateStudentView",
        "kind": 6,
        "importPath": "courses.views",
        "description": "courses.views",
        "peekOfCode": "class GetUpdateStudentView(generics.RetrieveUpdateAPIView):\n    authentication_classes = [JWTAuthentication]\n    permission_classes = [IsAuthenticated, CoursePermission]\n    serializer_class = StudentCourseSerializer\n    queryset = Course.objects.all()\n    lookup_url_kwarg = 'course_id'",
        "detail": "courses.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0001_initial",
        "description": "students_courses.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('courses', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='StudentCourse',\n            fields=[",
        "detail": "students_courses.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0002_alter_studentcourse_id",
        "description": "students_courses.migrations.0002_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('29c51cd5-e82c-4c68-9d12-357bf2c43a16'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0002_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0003_alter_studentcourse_id",
        "description": "students_courses.migrations.0003_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0002_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('9817ae71-13bf-4efb-a258-15be7b2408b3'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0003_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0004_alter_studentcourse_id",
        "description": "students_courses.migrations.0004_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0003_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('3dda8573-57e6-480a-8a5d-6645494c60ab'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0004_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0005_alter_studentcourse_id",
        "description": "students_courses.migrations.0005_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0004_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('20b019a3-32d5-47d7-9bac-33cb434a7a90'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0005_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0006_alter_studentcourse_id",
        "description": "students_courses.migrations.0006_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0005_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('43942fc4-ae6b-4eef-bee5-aa98586afcee'), editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0006_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0007_alter_studentcourse_id",
        "description": "students_courses.migrations.0007_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0006_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('d3aac5f2-2c61-4d26-be91-43576cec2866'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "students_courses.migrations.0007_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0008_alter_studentcourse_id",
        "description": "students_courses.migrations.0008_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0007_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('8ae27177-a534-42b8-b0f8-7745a9ef251a'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "students_courses.migrations.0008_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0009_alter_studentcourse_id",
        "description": "students_courses.migrations.0009_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0008_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.UUID('a6d553ce-67fb-46b1-8f3c-93476a97ab00'), editable=False, primary_key=True, serialize=False, unique=True),\n        ),",
        "detail": "students_courses.migrations.0009_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "students_courses.migrations.0010_alter_studentcourse_id",
        "description": "students_courses.migrations.0010_alter_studentcourse_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('students_courses', '0009_alter_studentcourse_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='studentcourse',\n            name='id',\n            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "students_courses.migrations.0010_alter_studentcourse_id",
        "documentation": {}
    },
    {
        "label": "StudentsCoursesConfig",
        "kind": 6,
        "importPath": "students_courses.apps",
        "description": "students_courses.apps",
        "peekOfCode": "class StudentsCoursesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'students_courses'",
        "detail": "students_courses.apps",
        "documentation": {}
    },
    {
        "label": "StatusChoice",
        "kind": 6,
        "importPath": "students_courses.models",
        "description": "students_courses.models",
        "peekOfCode": "class StatusChoice(models.TextChoices):\n    PENDING = \"pending\"\n    ACCEPTED = \"accepted\"\nclass StudentCourse(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    status = models.CharField(\n        max_length=20, choices=StatusChoice.choices, default=StatusChoice.PENDING\n    )\n    student = models.ForeignKey(\n        \"accounts.Account\", on_delete=models.CASCADE, related_name=\"students_courses\"",
        "detail": "students_courses.models",
        "documentation": {}
    },
    {
        "label": "StudentCourse",
        "kind": 6,
        "importPath": "students_courses.models",
        "description": "students_courses.models",
        "peekOfCode": "class StudentCourse(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    status = models.CharField(\n        max_length=20, choices=StatusChoice.choices, default=StatusChoice.PENDING\n    )\n    student = models.ForeignKey(\n        \"accounts.Account\", on_delete=models.CASCADE, related_name=\"students_courses\"\n    )\n    course = models.ForeignKey(\n        \"courses.Course\", on_delete=models.CASCADE, related_name=\"students_courses\"",
        "detail": "students_courses.models",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "kind": 6,
        "importPath": "students_courses.serializers",
        "description": "students_courses.serializers",
        "peekOfCode": "class StudentSerializer(serializers.ModelSerializer):\n    student_id = serializers.CharField(source='student.id', read_only=True)\n    student_username = serializers.CharField(source='student.username', read_only=True)\n    student_email = serializers.CharField(source='student.email')\n    class Meta:\n        model = StudentCourse\n        fields = ['id', 'student_id', 'student_username', 'student_email', 'status']\nclass StudentCourseSerializer(serializers.ModelSerializer):\n    students_courses = StudentSerializer(many=True)\n    class Meta:",
        "detail": "students_courses.serializers",
        "documentation": {}
    },
    {
        "label": "StudentCourseSerializer",
        "kind": 6,
        "importPath": "students_courses.serializers",
        "description": "students_courses.serializers",
        "peekOfCode": "class StudentCourseSerializer(serializers.ModelSerializer):\n    students_courses = StudentSerializer(many=True)\n    class Meta:\n        model = Course\n        fields = ['id','name', 'students_courses']\n        read_only_fields = ['id','name']\n    def update(self, instance, validated_data):\n        students = []\n        students_not_found = []\n        for students_courses in validated_data['students_courses']:",
        "detail": "students_courses.serializers",
        "documentation": {}
    },
    {
        "label": "TestAccountModel",
        "kind": 6,
        "importPath": "tests.accounts.test_models",
        "description": "tests.accounts.test_models",
        "peekOfCode": "class TestAccountModel(TestCase):\n    def test_username_field(self):\n        expected = 150\n        result = Account._meta.get_field(\"username\").max_length\n        message = \"Atributo 'username' possui 'max_length' diferente do esperado.\"\n        self.assertEqual(expected, result, message)\n        result = Account._meta.get_field(\"username\").unique\n        message = \"Atributo 'username' não foi configurado como único.\"\n        self.assertTrue(result, message)\n        result = Account._meta.get_field(\"username\").null",
        "detail": "tests.accounts.test_models",
        "documentation": {}
    },
    {
        "label": "TestCreateAccountView",
        "kind": 6,
        "importPath": "tests.accounts.test_views",
        "description": "tests.accounts.test_views",
        "peekOfCode": "class TestCreateAccountView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/accounts/\"\n    def test_can_create_superuser_with_success(self):\n        expected = 201\n        url = self.BASE_URL\n        user_data = {\n            \"username\": \"bob\",\n            \"password\": \"1234\",",
        "detail": "tests.accounts.test_views",
        "documentation": {}
    },
    {
        "label": "TestLoginAccountView",
        "kind": 6,
        "importPath": "tests.accounts.test_views",
        "description": "tests.accounts.test_views",
        "peekOfCode": "class TestLoginAccountView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/login/\"\n    def test_login_with_incorrect_credentials(self):\n        URL = self.BASE_URL\n        account_data = {\n            \"username\": \"account_1111\",\n            \"password\": \"1111\",\n        }",
        "detail": "tests.accounts.test_views",
        "documentation": {}
    },
    {
        "label": "TestContentModel",
        "kind": 6,
        "importPath": "tests.contents.test_models",
        "description": "tests.contents.test_models",
        "peekOfCode": "class TestContentModel(TestCase):\n    def test_name_field(self):\n        expected = 150\n        result = Content._meta.get_field(\"name\").max_length\n        message = \"Atributo 'name' possui 'max_length' diferente do esperado.\"\n        self.assertEqual(expected, result, message)\n        result = Content._meta.get_field(\"name\").null\n        message = \"Atributo 'name' deve ser obrigatório.\"\n        self.assertFalse(result, message)\n    def test_content_field(self):",
        "detail": "tests.contents.test_models",
        "documentation": {}
    },
    {
        "label": "TestCreateContentView",
        "kind": 6,
        "importPath": "tests.contents.test_views",
        "description": "tests.contents.test_views",
        "peekOfCode": "class TestCreateContentView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/{}/contents/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.contents.test_views",
        "documentation": {}
    },
    {
        "label": "TestRetrieveContentView",
        "kind": 6,
        "importPath": "tests.contents.test_views",
        "description": "tests.contents.test_views",
        "peekOfCode": "class TestRetrieveContentView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/{}/contents/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.contents.test_views",
        "documentation": {}
    },
    {
        "label": "TestUpdateContentView",
        "kind": 6,
        "importPath": "tests.contents.test_views",
        "description": "tests.contents.test_views",
        "peekOfCode": "class TestUpdateContentView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/{}/contents/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.contents.test_views",
        "documentation": {}
    },
    {
        "label": "TestDeleteContentView",
        "kind": 6,
        "importPath": "tests.contents.test_views",
        "description": "tests.contents.test_views",
        "peekOfCode": "class TestDeleteContentView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/{}/contents/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.contents.test_views",
        "documentation": {}
    },
    {
        "label": "TestCourseModel",
        "kind": 6,
        "importPath": "tests.courses.test_models",
        "description": "tests.courses.test_models",
        "peekOfCode": "class TestCourseModel(TestCase):\n    def test_name_field(self):\n        expected = 100\n        result = Course._meta.get_field(\"name\").max_length\n        message = \"Atributo 'name' possui 'max_length' diferente do esperado.\"\n        self.assertEqual(expected, result, message)\n        result = Course._meta.get_field(\"name\").unique\n        message = \"Atributo 'name' não foi configurado como único.\"\n        self.assertTrue(result, message)\n        result = Course._meta.get_field(\"name\").null",
        "detail": "tests.courses.test_models",
        "documentation": {}
    },
    {
        "label": "TestRelationshipTest",
        "kind": 6,
        "importPath": "tests.courses.test_models",
        "description": "tests.courses.test_models",
        "peekOfCode": "class TestRelationshipTest(TestCase):\n    def test_one_to_many_between_account_course(self):\n        result = Course._meta.get_field(\"instructor\")\n        message = \"Atributo 'instructor' do relacionamento 1:N não foi declarado corretamente.\"\n        self.assertIsInstance(result, ForeignKey, message)\n    def test_many_to_many_between_account_course(self):\n        result = Course._meta.get_field(\"students\")\n        message = (\n            \"Relacionamento N:N não foi declarado corretamente.\"\n            \"O comportamento esperado é: os cursos terão a chave 'students' \"",
        "detail": "tests.courses.test_models",
        "documentation": {}
    },
    {
        "label": "TestCreateCourseView",
        "kind": 6,
        "importPath": "tests.courses.test_views",
        "description": "tests.courses.test_views",
        "peekOfCode": "class TestCreateCourseView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.courses.test_views",
        "documentation": {}
    },
    {
        "label": "TestReadCourseView",
        "kind": 6,
        "importPath": "tests.courses.test_views",
        "description": "tests.courses.test_views",
        "peekOfCode": "class TestReadCourseView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.courses.test_views",
        "documentation": {}
    },
    {
        "label": "TestDeleteCourseView",
        "kind": 6,
        "importPath": "tests.courses.test_views",
        "description": "tests.courses.test_views",
        "peekOfCode": "class TestDeleteCourseView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.courses.test_views",
        "documentation": {}
    },
    {
        "label": "TestRetrieveCourseView",
        "kind": 6,
        "importPath": "tests.courses.test_views",
        "description": "tests.courses.test_views",
        "peekOfCode": "class TestRetrieveCourseView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.courses.test_views",
        "documentation": {}
    },
    {
        "label": "TestUpdateCourseView",
        "kind": 6,
        "importPath": "tests.courses.test_views",
        "description": "tests.courses.test_views",
        "peekOfCode": "class TestUpdateCourseView(APITestCase):\n    @classmethod\n    def setUpTestData(cls) -> None:\n        cls.BASE_URL = \"/api/courses/\"\n        cls.superuser = baker.make(\"accounts.Account\", is_superuser=True)\n        cls.common_user = baker.make(\"accounts.Account\", is_superuser=False)\n        cls.superuser_token = str(\n            RefreshToken.for_user(cls.superuser).access_token,\n        )\n        cls.common_user_token = str(",
        "detail": "tests.courses.test_views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "_core.asgi",
        "description": "_core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "_core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\ndotenv.load_dotenv()\nSECRET_KEY = os.getenv(\"SECRET_KEY\", get_random_secret_key())\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nRENDER_EXTERNAL_HOSTNAME = os.getenv(\"RENDER_EXTERNAL_HOSTNAME\")",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "SECRET_KEY = os.getenv(\"SECRET_KEY\", get_random_secret_key())\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nRENDER_EXTERNAL_HOSTNAME = os.getenv(\"RENDER_EXTERNAL_HOSTNAME\")\nif RENDER_EXTERNAL_HOSTNAME:\n    ALLOWED_HOSTS += [RENDER_EXTERNAL_HOSTNAME]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nRENDER_EXTERNAL_HOSTNAME = os.getenv(\"RENDER_EXTERNAL_HOSTNAME\")\nif RENDER_EXTERNAL_HOSTNAME:\n    ALLOWED_HOSTS += [RENDER_EXTERNAL_HOSTNAME]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nRENDER_EXTERNAL_HOSTNAME = os.getenv(\"RENDER_EXTERNAL_HOSTNAME\")\nif RENDER_EXTERNAL_HOSTNAME:\n    ALLOWED_HOSTS += [RENDER_EXTERNAL_HOSTNAME]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "RENDER_EXTERNAL_HOSTNAME",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "RENDER_EXTERNAL_HOSTNAME = os.getenv(\"RENDER_EXTERNAL_HOSTNAME\")\nif RENDER_EXTERNAL_HOSTNAME:\n    ALLOWED_HOSTS += [RENDER_EXTERNAL_HOSTNAME]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"drf_spectacular\",\n    \"accounts\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "ROOT_URLCONF = \"_core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"_core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv(\"POSTGRES_DB\"),\n        \"USER\": os.getenv(\"POSTGRES_USER\"),\n        \"PASSWORD\": os.getenv(\"POSTGRES_PASSWORD\"),\n        \"HOST\": \"127.0.0.1\",",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv(\"POSTGRES_DB\"),\n        \"USER\": os.getenv(\"POSTGRES_USER\"),\n        \"PASSWORD\": os.getenv(\"POSTGRES_PASSWORD\"),\n        \"HOST\": \"127.0.0.1\",\n        \"PORT\": 5432,\n    }\n}",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "DATABASE_URL = os.getenv('DATABASE_URL')\nif DATABASE_URL:\n    db_from_env = dj_database_url.config(\n        default=DATABASE_URL, conn_max_age=500, ssl_require=True)\n    DATABASES['default'].update(db_from_env)\n    DEBUG = False\nif not DEBUG:\n    STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n    STATICFILES_STORAGE = \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\n# Password validation",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.Account\"",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.Account\"\nREST_FRAMEWORK = {",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.Account\"\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.Account\"\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\n# _core/settings.py\nSPECTACULAR_SETTINGS = {",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.Account\"\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\n# _core/settings.py\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Course Management API',\n    'DESCRIPTION': 'Course, teacher and student management',\n    'VERSION': '1.0.0',",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"accounts.Account\"\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\n# _core/settings.py\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Course Management API',\n    'DESCRIPTION': 'Course, teacher and student management',\n    'VERSION': '1.0.0',\n}",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\n# _core/settings.py\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Course Management API',\n    'DESCRIPTION': 'Course, teacher and student management',\n    'VERSION': '1.0.0',\n}",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "_core.settings",
        "description": "_core.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Course Management API',\n    'DESCRIPTION': 'Course, teacher and student management',\n    'VERSION': '1.0.0',\n}",
        "detail": "_core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "_core.urls",
        "description": "_core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('accounts.urls')),\n    path('api/', include('courses.urls')),\n    path('api/', include('contents.urls')),\n    path('api/schema/', SpectacularAPIView.as_view(), name='schema'),\n    path('api/docs/', SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n]",
        "detail": "_core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "_core.wsgi",
        "description": "_core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "_core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', '_core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]